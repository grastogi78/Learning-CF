# This CF template will create VPC infra (VPC, Subnets, NACL, IGW and route53 (for public and private hosted zone)
# Version: 1.04
AWSTemplateFormatVersion: "2010-09-09" #Current Template format version as of 09/12/2017
# Below parameter section for the VPC and subnets to be created.
# Please take care that none of them overlap with in use CIDR
Parameters:
  VPCCidr: #Logical ID to be referenced throughout this Cloud formation Template
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})" #Regular expression for CIDR range
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/16. Should not Overlap with in-use CIDR
    Default: 10.21.0.0/16 #In case no value is provided this value will be used. In CI/CD scenario this line will be removed
  PublicCIDR:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/22. Should not Overlap with in-use CIDR
    Default: 10.21.1.0/24 # Provides 256 hosts 10.21.1.0 - 10.21.1.255 . This line may be removed.
  PrivateCIDR:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/22. It must not overlap with any CIDR currently in use.
    Default: 10.21.5.0/24 # Provides 256 hosts 10.21.5.0 - 10.21.5.255 . This line may be removed.
Resources:
  VPC: #This is the logical ID of the VPC resource
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref VPCCidr #Reference Function called to take input from data defined by user
  IGW: #This is the logical ID of the InternetGateway resource. This resource will allow all public facing resources access to Internet.
    Type: "AWS:EC2::InternetGateway"
    Properties:
      Tags: #Check if this will work*****
        Key: Name
        Value: InternetGateway
  GatewayAttach: # Action to attach the InternetGateway to the VPC
    Type: "AWS::EC2::VPCGatewayAttachement"
    Properties:
      InternetGatewayId: !Ref IGW # Reference function that calls the logical Id of the IGW created above
      VpcId: !Ref VPC # Reference function that calls the logical Id of the VPC created
  SubnetPublic: #Creation of the Public Subnet.
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [0, !GetAZs] #Availability Zone will be selected from below defined mapping
      CidrBlock: !Ref PublicCIDR # CIDR block for the subnet provided by the user
      VpcId: !Ref VPC
  SubnetPrivate: #Creation of the Private Subnet.
    Type: "AWS::EC2:Subnet"
    Properties:
      AvailabilityZone: !Select [0, !GetAZs]
      CidrBlock: !Ref PrivateCIDR
      VpcId: !Ref VPC
  SubnetRouteTableAssociatePublic: #Subnet association to route table
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePublic #Defined below
      SubnetId: !Ref SubnetPublic #Defined above as SubnetPublic
  SubnetRouteTableAssociatePrivate:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePrivate
      SubnetId: ! Ref SubnetPrivate #Defined above as SubnetPrivate
  RouteDefaultPublic:
    Type: "AWS::EC2::Route"
    DependsOn: GatewayAttach #This action allow for IGW to be first attached to VPC before creating the public route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0 #Allows InternetGateway to route traffic incoming from Public Subnet to outside world
      GatewayId: !Ref IGW
      RouteTableId: !Ref RouteTablePublic
  RouteDefaultPrivate:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway
      RouteTableId: !Ref RouteTablePrivate
  RouteTablePublic:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
  RouteTablePrivate:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VPCId: !Ref VPCId
  EIPNatGW:
    DependsOn: GatewayAttach
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
  NatGateway:
    DependsOn: GatewayAttach
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt EIPNatGW.AllocationId
      SubnetId: !Ref SubnetPublic
  OutPuts:
    vpcid:
      Description: ID of the shared infra VPC
      Value: !Ref VPC
    natgatewayid:
      Description: ID of the NAT Gateway
      Value: !Ref NatGateway
    publicroutetable:
      Description: ID of the Public Route table
      Value: !Ref RouteTablePublic
    privateroutetable:
      Description: ID of the Private Route table
      Value: !Ref RouteTablePrivate
